name: Default Workflow

on: [push, workflow_dispatch]

jobs:
  analyse-repos-szz:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Docker Python package
        run: |
          python -m pip install --upgrade pip
          pip install docker
      - name: Run Docker SZZ pipeline
        run: |
          python -u driver/setup_analysis.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Python artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: |
            sortie/git/
            sortie/results/
            entree/
  analyse-repos-pharo-python:
    needs: analyse-repos-szz
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Python artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'
      - name: Install NPM dependencies
        run: npm install -g ts2famix@1.3.1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Pharo
        run: |
          wget -O- get.pharo.org/64/100+vm | bash
          ./pharo Pharo.image st .github/workflows/installMoose.st
          ./pharo Pharo.image st .github/workflows/installFamixTypeScript.st
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run code analysis
        run: python -u driver/execute_analysis.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Python artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: analysis-artifacts
          path: |
            sortie/results/
            metrics/
            processed_projects/
            project_processing_results/
            artifacts/
